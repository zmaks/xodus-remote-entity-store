name: Release Server Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Version to release"
        required: true

jobs:
  release_job:
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ github.event.inputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        #TODO: Add a tag validation step to check that the tag is the next comparing with the previous

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u zumaxim --password-stdin

      - name: Build, tag, and push image to DockerHub
        run: |
          ./gradlew :server:jib \
            --console=plain \
            -Dcontainer.tags=$RELEASE_TAG

      - name: "Create release"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ github.token }}"
          script: |
            try {
              await github.rest.repos.createRelease({
                name: "Server version ${{ process.env.RELEASE_TAG }}",
                body: "`docker pull zumaxim/xres:${{ process.env.RELEASE_TAG }}`",
                draft: false,
                generate_release_notes: true,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }